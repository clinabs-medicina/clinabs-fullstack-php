name: Deploy and Validate PHP Code

on:
  push:
    branches:
      - main  # Trigger on push to the homolog branch (after merge)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up PHP and install required dependencies
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'  # Adjust PHP version as required

      # Install Composer dependencies (optional, adjust if using Composer)
      - name: Install Composer dependencies
        run: |
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install --no-interaction

      # Validate PHP code (Linting)
      - name: Validate PHP code
        run: |
          find . -type f -name "*.php" -exec php -l {} \;

      # Install ncftp (for FTP upload)
      - name: Install ncftp
        run: sudo apt-get install -y ncftp

      # Set FTP credentials (use GitHub secrets)
      - name: Set FTP credentials
        run: |
          echo "open ${FTP_SERVER}" > ncftp_cmd.txt
          echo "user ${FTP_USERNAME} ${FTP_PASSWORD}" >> ncftp_cmd.txt
          echo "cd ${FTP_REMOTE_DIR}" >> ncftp_cmd.txt
          echo "quit" >> ncftp_cmd.txt

      # Prepare files for upload, respecting .gitignore
      - name: Prepare files for upload (ignore gitignored files)
        run: |
          # Get list of files tracked by git (ignoring .gitignore files)
          git ls-files --exclude-standard | tar -czf files_to_upload.tar.gz -T -

      # Upload files via FTP using ncftp, ignoring SSL certificate validation
      - name: Upload files to FTP server (ignore SSL)
        run: |
          # Extract the files and upload via ncftp
          mkdir -p  /tmp/uploaded_files
          tar -xzf files_to_upload.tar.gz -C /tmp/uploaded_files
          ncftp -z -f <(echo -e "open ${FTP_SERVER}\nuser ${FTP_USERNAME} ${FTP_PASSWORD}\ncd ${FTP_REMOTE_DIR}\nput -R  /var/uploaded_files/*\nquit")
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}
